[{"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/index.js":"1","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/App.js":"2","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Account.js":"3","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/pages/Main.js":"4","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/TopMenu.js":"5","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/ChatSide.js":"6","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/ChatRight.js":"7","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Messages.js":"8","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Members.js":"9","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/pages/PrivateRoute.js":"10","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/context/auth/AuthState.js":"11","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/context/auth/AuthContext.js":"12","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/context/types.js":"13","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/context/auth/AuthReducer.js":"14","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/help/functions.js":"15","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/axios.js":"16","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Loading.js":"17"},{"size":197,"mtime":1608465200416,"results":"18","hashOfConfig":"19"},{"size":409,"mtime":1609091416184,"results":"20","hashOfConfig":"19"},{"size":4039,"mtime":1609095724364,"results":"21","hashOfConfig":"19"},{"size":415,"mtime":1608584119571,"results":"22","hashOfConfig":"19"},{"size":4853,"mtime":1609093916990,"results":"23","hashOfConfig":"19"},{"size":3383,"mtime":1608585293345,"results":"24","hashOfConfig":"19"},{"size":3334,"mtime":1608585314541,"results":"25","hashOfConfig":"19"},{"size":754,"mtime":1608584950335,"results":"26","hashOfConfig":"19"},{"size":573,"mtime":1608584673101,"results":"27","hashOfConfig":"19"},{"size":1234,"mtime":1609091900120,"results":"28","hashOfConfig":"19"},{"size":4245,"mtime":1609094555304,"results":"29","hashOfConfig":"19"},{"size":104,"mtime":1609091365557,"results":"30","hashOfConfig":"19"},{"size":430,"mtime":1609093833380,"results":"31","hashOfConfig":"19"},{"size":1669,"mtime":1609093841657,"results":"32","hashOfConfig":"19"},{"size":224,"mtime":1609089796490,"results":"33","hashOfConfig":"19"},{"size":174,"mtime":1609091584300,"results":"34","hashOfConfig":"19"},{"size":230,"mtime":1609091685270,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"re2ht2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/index.js",[],["74","75"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/App.js",["76","77"],"import React from 'react'\n//components\nimport Account from './components/Account'\nimport Main from './pages/Main'\nimport AuthState from './context/auth/AuthState'\nimport PrivateRoute from './pages/PrivateRoute'\n\n//styles\nimport \"./custom.scss\"\n\nfunction App() {\n  return (\n    <AuthState>\n        <div className=\"dchat\">\n          <PrivateRoute />\n        </div>\n      </AuthState>\n  );\n}\n\nexport default App;","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Account.js",["78","79","80","81","82"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/pages/Main.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/TopMenu.js",["83","84"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/ChatSide.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/ChatRight.js",["85","86","87","88","89"],"import React, { useState } from 'react'\nimport Avatar from 'react-avatar'\nimport { RiSendPlane2Line } from 'react-icons/ri'\nimport { AiOutlineSave } from 'react-icons/ai'\n\nimport Messages from './Messages';\nimport Members from './Members';\n\n\nexport default function ChatRight() {\n    const [poraka, namestiPoraka] = useState(\"\");\n    const [promenlivo, namestiPromenlivo] = useState(false);\n    const [tab, namestiTab] = useState(1);\n    const [imeGrupa, namestiImeGrupa] = useState('Ime na grupa');\n\n    const promeniImeGrupa = () => {\n        console.log('promeni ime grupa');\n    }\n\n    const onSubmit = () => {\n        console.log('prakjaj poraka');\n    }\n\n    const namestiPromenlivoGrupa = (vnesenoIme) => {\n        namestiImeGrupa(vnesenoIme);\n\n        if (vnesenoIme.trim() != \"\") {\n            namestiPromenlivo(true);\n        } else {\n            namestiPromenlivo(false);\n        }\n    }\n\n    return (\n        <div className=\"chat-right\">\n            <div className=\"chat-right__top\">\n                <div className=\"chat-right__top-left\">\n                    <div className=\"chat-name-icon container-small\">\n                        <div className=\"chat-icon\">\n                            <Avatar name='Ime na grupa' className=\"radius-half\" size={50} />\n                        </div>\n                        <div className=\"chat-name\">\n                            <div className=\"chat-name__edit d-flex\">\n                                <input onChange={(e) => namestiPromenlivoGrupa(e.target.value)} value={imeGrupa} />\n                                {\n                                    promenlivo && (\n                                        <AiOutlineSave onClick={() => promeniImeGrupa()} size={20} />\n                                    )\n                                }\n                            </div>\n                            <span>2 членови</span>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"chat-tabs container-small\">\n                    <div onClick={() => namestiTab(1)} className={`chat-tab ${tab == 1 ? 'active' : ''}`}>\n                        <p>Пораки</p>\n                    </div>\n                    <div onClick={() => namestiTab(2)} className={`chat-tab ${tab == 2 ? 'active' : ''}`}>\n                        <p>Членови</p>\n                    </div>\n                </div>\n            </div>\n\n            {\n                tab == 1 ? (\n                    <Messages />\n                ) : (\n                    <Members />\n                    )\n            }\n\n            {\n                tab == 1 && (\n                    <div className=\"chat-new\">\n                        <form onSubmit={onSubmit} className=\"newMesasge__form\">\n                            <input value={poraka} onChange={(e) => namestiPoraka(e.target.value)} placeholder=\"Напиши порака...\" type=\"text\" />\n                            <button>\n                                <RiSendPlane2Line size={23} />\n                            </button>\n                        </form>\n                        <form className=\"img-pick\" action=\"\">\n                            <input type=\"file\" name=\"\" id=\"\" />\n                        </form>\n                    </div>\n\n                )\n            }\n        </div>\n    )\n}\n","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Messages.js",["90","91"],"import React, {useState} from 'react'\nimport Avatar from 'react-avatar'\n\n\nexport default function Messages() {\n    return (\n        <div className=\"chat-messages-wrap container-small\">\n            <div className='chat-one'>\n                <div className=\"chat-avatar\">\n                    <Avatar size=\"22\" name=\"Dimitar Kuzmanovski\" className=\"radius-half\" size={32} />\n                </div>\n                <div className=\"chat-messages\">\n                    <div className=\"chat-message\">\n                        <p>hiiii</p>\n                    </div>\n                    <div className=\"chat-time\">\n                        <p>пред 2 минути.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Members.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/pages/PrivateRoute.js",["92","93","94"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/context/auth/AuthState.js",["95","96"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/context/auth/AuthContext.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/context/types.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/context/auth/AuthReducer.js",["97"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/help/functions.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/axios.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Loading.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":15},{"ruleId":"102","severity":1,"message":"106","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":12},{"ruleId":"102","severity":1,"message":"107","line":6,"column":47,"nodeType":"104","messageId":"105","endLine":6,"endColumn":55},{"ruleId":"102","severity":1,"message":"108","line":30,"column":15,"nodeType":"104","messageId":"105","endLine":30,"endColumn":22},{"ruleId":"102","severity":1,"message":"109","line":45,"column":15,"nodeType":"104","messageId":"105","endLine":45,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":62,"column":29,"nodeType":"112","endLine":62,"endColumn":112},{"ruleId":"110","severity":1,"message":"111","line":79,"column":33,"nodeType":"112","endLine":79,"endColumn":115},{"ruleId":"102","severity":1,"message":"113","line":13,"column":24,"nodeType":"104","messageId":"105","endLine":13,"endColumn":37},{"ruleId":"102","severity":1,"message":"114","line":14,"column":23,"nodeType":"104","messageId":"105","endLine":14,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":27,"column":31,"nodeType":"117","messageId":"118","endLine":27,"endColumn":33},{"ruleId":"115","severity":1,"message":"119","line":57,"column":83,"nodeType":"117","messageId":"118","endLine":57,"endColumn":85},{"ruleId":"115","severity":1,"message":"119","line":60,"column":83,"nodeType":"117","messageId":"118","endLine":60,"endColumn":85},{"ruleId":"115","severity":1,"message":"119","line":67,"column":21,"nodeType":"117","messageId":"118","endLine":67,"endColumn":23},{"ruleId":"115","severity":1,"message":"119","line":75,"column":21,"nodeType":"117","messageId":"118","endLine":75,"endColumn":23},{"ruleId":"102","severity":1,"message":"120","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":10,"column":90,"nodeType":"123","endLine":10,"endColumn":99},{"ruleId":"102","severity":1,"message":"124","line":13,"column":19,"nodeType":"104","messageId":"105","endLine":13,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":25,"column":30,"nodeType":"117","messageId":"118","endLine":25,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":31,"column":8,"nodeType":"127","endLine":31,"endColumn":10,"suggestions":"128"},{"ruleId":"102","severity":1,"message":"129","line":6,"column":127,"nodeType":"104","messageId":"105","endLine":6,"endColumn":138},{"ruleId":"115","severity":1,"message":"119","line":57,"column":53,"nodeType":"117","messageId":"118","endLine":57,"endColumn":55},{"ruleId":"130","severity":1,"message":"131","line":3,"column":1,"nodeType":"132","endLine":62,"endColumn":2},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Account' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","'setError' is assigned a value but never used.","'logiran' is assigned a value but never used.","'registriran' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setLoadingBtn' is assigned a value but never used.","'setPasswords' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'loggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'namestiNajavenKorisnik' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'CLEAR_ERROR' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [namestiNajavenKorisnik, user]",{"range":"138","text":"139"},[933,935],"[namestiNajavenKorisnik, user]"]