[{"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/index.js":"1","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/App.js":"2","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Account.js":"3","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/pages/Main.js":"4","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/TopMenu.js":"5","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/ChatSide.js":"6","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/ChatRight.js":"7","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Messages.js":"8","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Members.js":"9"},{"size":197,"mtime":1608465200416,"results":"10","hashOfConfig":"11"},{"size":342,"mtime":1608486438620,"results":"12","hashOfConfig":"11"},{"size":3099,"mtime":1608466980896,"results":"13","hashOfConfig":"11"},{"size":415,"mtime":1608584119571,"results":"14","hashOfConfig":"11"},{"size":4742,"mtime":1608486025363,"results":"15","hashOfConfig":"11"},{"size":3383,"mtime":1608585293345,"results":"16","hashOfConfig":"11"},{"size":3334,"mtime":1608585314541,"results":"17","hashOfConfig":"11"},{"size":754,"mtime":1608584950335,"results":"18","hashOfConfig":"11"},{"size":573,"mtime":1608584673101,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"re2ht2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/index.js",[],["42","43"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/App.js",["44"],"import React from 'react'\n//components\nimport Account from './components/Account'\nimport Main from './pages/Main'\n\n//styles\nimport \"./custom.scss\"\n\nfunction App() {\n  return (\n    <div className=\"dchat\">\n        <Main />\n      {/* <div className=\"account bg-primary\">\n        <Account/>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Account.js",["45","46","47","48"],"import React, { useState } from 'react'\n\nexport default function Account() {\n     //Login promenlivi:\n     const [email, setEmail] = useState(\"\");\n     const [password, setPassword] = useState(\"\");\n \n     //Register promenlivi:\n     const [fname, setFname] = useState(\"\");\n     const [lname, setLname] = useState(\"\");\n     const [phone, setPhone] = useState(\"\");\n     const [emailRegister, setEmailRegister] = useState(\"\");\n     const [passwordRegister, setPasswordRegister] = useState(\"\");\n\n    // koj screen da se prikazi:\n    const [loginForm, setLoginForm] = useState(true);\n\n    // najavi se\n    const submitLogin = async (e) => {\n        e.preventDefault();\n        const user = {\n            email,\n            password\n        }\n    }\n\n    //registriraj se\n    const submitRegister = async (e) => {\n        e.preventDefault();\n\n        const user = {\n            email: emailRegister,\n            password: passwordRegister,\n            fname,\n            lname,\n            phone\n        }\n    }\n\n    return (\n        <div className=\"account-form\">\n            <div className=\"account-form__header\">\n                <h2>{loginForm ? 'Најави се' : 'Регистрација'}</h2>\n            </div>\n            <div className=\"account-form__inner\">\n                {\n                    loginForm ? (\n                        <form onSubmit={submitLogin}>\n                            <input value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Е-mail адреса\" type=\"text\" />\n                            <input value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Лозинка\" type=\"password\" />\n                            <button type=\"submit\">Најава</button>\n\n                            <a className=\"pointer hover-text-primary\" onClick={() => { setLoginForm(false); }}>Регистрирај се</a>\n                        </form>) : (\n                            <form onSubmit={submitRegister}>\n                                <input value={fname} onChange={(e) => setFname(e.target.value)} placeholder=\"Вашето име\" type=\"text\" />\n                                <input value={lname} onChange={(e) => setLname(e.target.value)} placeholder=\"Вашето презиме\" type=\"text\" />\n                                <input value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Телефонски број\" type=\"text\" />\n                                <input value={emailRegister} onChange={(e) => setEmailRegister(e.target.value)} placeholder=\"Е-mail адреса\" type=\"text\" />\n                                <input value={passwordRegister} onChange={(e) => setPasswordRegister(e.target.value)} placeholder=\"Лозинка\" type=\"password\" />\n                                <button type=\"submit\">Регистрирај се</button>\n                                <a className=\"pointer hover-text-primary\" onClick={() => { setLoginForm(true); }}>Најава</a>\n                            </form>\n                        )\n                }\n            </div>\n        </div>\n    )\n}\n","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/pages/Main.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/TopMenu.js",["49","50"],"import React, {useState} from 'react'\n\nimport Avatar from 'react-avatar'\nimport {MdChat} from 'react-icons/md'\nimport { GrFormDown } from 'react-icons/gr'\n\n\nexport default function TopMenu() {\n    const [settings, setSettings] = useState(false);\n    const [popup, setPopup] = useState(false);\n    const [loadingBtn, setLoadingBtn] = useState(false);\n    const [passwords, setPasswords] = useState({\n        oldPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n    })\n\n    //local funkcii\n    const logout = () => {\n        console.log('logout');\n    }\n\n    const handleChange = (e) => {\n        console.log('smenav input');\n        console.log(e.target.value);\n        console.log(e.target.name);\n        setSettings({\n            ...settings,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log('promeni lozinka');\n    }\n\n    const { oldPassword, newPassword, confirmPassword } = passwords;\n    \n    return (\n        <div className=\"top-menu container-small\">\n            <div className=\"top-menu__left\">\n                <div className=\"logo\"> \n                    <MdChat className=\"logo-icon\" />\n                    <h4>D-Chat</h4>\n                </div>\n            </div>\n            <div className=\"top-menu__right\" onClick={() => setSettings(!settings)}>\n                <div className=\"user-settings-toggle\">\n                    <Avatar className=\"avatar\" size=\"30\" name={`Димитар Кузмановски`} />\n                    <p>Димитар Кузмановски</p>\n                    <GrFormDown size=\"24\" />\n                </div>\n            </div>\n\n            {settings && (\n                <div className=\"options-dropdown\">\n                    <div onClick={() => setPopup(!popup)} className=\"option-choose\">\n                        <p>Промени лозинка</p>\n                    </div>\n                    <div onClick={logout} className=\"option-choose\">\n                        <p>Одјави се</p>\n                    </div>\n                </div>\n            )}\n\n\n            {\n                popup && (\n                    <div className=\"settings fixed d-flex flex-center top-0 left-0 h-100 w-100 bg-dark-light z-9\">\n                        <div className=\"settings-inner d-flex flex-column bg-white box-shadow-light\">\n                            <div className=\"settings-header bb-1px-solid b-lightGrey-lighter d-flex justify-between align-center\">\n                                <h4 className=\"text-uppercase\">Подесувања</h4>\n                                <span onClick={() => setPopup(false)}>&#10005;</span>\n                            </div>\n                            <form noValidate onSubmit={onSubmit} className=\"settings-inner d-flex flex-column px-20px py-20px\">\n                                <div className=\"contact-box d-flex flex-column w-100 b-2px-solid b-lightGrey-lighter py-12px mt-15px\">\n                                    <input className=\"px-5px w-100\" name=\"oldPassword\" onChange={handleChange} value={oldPassword} required type=\"password\" />\n                                    <label htmlFor=\"\">Стара лозинка</label>\n                                </div>\n                                <div className=\"contact-box d-flex flex-column w-100 b-2px-solid b-lightGrey-lighter py-12px mt-15px\">\n                                    <input className=\"px-5px w-100\" name=\"newPassword\" onChange={handleChange} value={newPassword} required type=\"password\" />\n                                    <label htmlFor=\"\">Нова лозинка</label>\n                                </div>\n                                <div className=\"contact-box d-flex flex-column w-100 b-2px-solid b-lightGrey-lighter py-12px mt-15px\">\n                                    <input className=\"px-5px w-100\" name=\"confirmPassword\" onChange={handleChange} value={confirmPassword} required type=\"password\" />\n                                    <label htmlFor=\"\">Потврди лозинка</label>\n                                </div>\n                                <div className=\"submit-btn mt-15px\">\n                                    <button className=\"w-100 bg-primary hover-bg-primary-dark text-uppercase hover-text-dark py-20px text-center text-white\">\n                                        {loadingBtn ? 'Ве молиме почекајте...' : 'Промени лозинка'}\n                                    </button>\n                                </div>\n                              \n                            </form>\n\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n","/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/ChatSide.js",[],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/ChatRight.js",["51","52","53","54","55"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Messages.js",["56","57"],"/home/dimitar/Documents/code-learn/dchat/dchat-client/src/components/Members.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":15},{"ruleId":"62","severity":1,"message":"66","line":21,"column":15,"nodeType":"64","messageId":"65","endLine":21,"endColumn":19},{"ruleId":"62","severity":1,"message":"66","line":31,"column":15,"nodeType":"64","messageId":"65","endLine":31,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":53,"column":29,"nodeType":"69","endLine":53,"endColumn":112},{"ruleId":"67","severity":1,"message":"68","line":62,"column":33,"nodeType":"69","endLine":62,"endColumn":115},{"ruleId":"62","severity":1,"message":"70","line":11,"column":24,"nodeType":"64","messageId":"65","endLine":11,"endColumn":37},{"ruleId":"62","severity":1,"message":"71","line":12,"column":23,"nodeType":"64","messageId":"65","endLine":12,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":27,"column":31,"nodeType":"74","messageId":"75","endLine":27,"endColumn":33},{"ruleId":"72","severity":1,"message":"76","line":57,"column":83,"nodeType":"74","messageId":"75","endLine":57,"endColumn":85},{"ruleId":"72","severity":1,"message":"76","line":60,"column":83,"nodeType":"74","messageId":"75","endLine":60,"endColumn":85},{"ruleId":"72","severity":1,"message":"76","line":67,"column":21,"nodeType":"74","messageId":"75","endLine":67,"endColumn":23},{"ruleId":"72","severity":1,"message":"76","line":75,"column":21,"nodeType":"74","messageId":"75","endLine":75,"endColumn":23},{"ruleId":"62","severity":1,"message":"77","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"79","line":10,"column":90,"nodeType":"80","endLine":10,"endColumn":99},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Account' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setLoadingBtn' is assigned a value but never used.","'setPasswords' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]